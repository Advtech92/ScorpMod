package com.scorpmod;

import java.util.Arrays;

import net.minecraft.block.Block;
import net.minecraft.block.material.Material;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.potion.Potion;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.fluids.Fluid;
import net.minecraftforge.fluids.FluidContainerRegistry;
import net.minecraftforge.fluids.FluidRegistry;

import com.scorpmod.blocks.BlockCommanderAdz;
import com.scorpmod.blocks.BlockContainedSunspot;
import com.scorpmod.blocks.BlockContainerBaseScorpMod;
import com.scorpmod.blocks.BlockElipsicalLamp;
import com.scorpmod.blocks.BlockHandScanner;
import com.scorpmod.blocks.BlockScorp;
import com.scorpmod.fluid.BlockFluid;
import com.scorpmod.handler.BucketHandler;
import com.scorpmod.handler.GuiHandler;
import com.scorpmod.items.ItemBaseScorpMod;
import com.scorpmod.items.ItemBucketScorpMod;
import com.scorpmod.items.ItemDrink;
import com.scorpmod.items.ItemDrinkDirty;
import com.scorpmod.items.ItemMonsterMeat;
import com.scorpmod.libs.Reference;
import com.scorpmod.tileentity.HandScannerTile;
import com.scorpmod.tileentity.TileBottler;
import com.scorpmod.tileentity.TileMeatPurifier;
import com.scorpmod.tileentity.TileMixer;
import com.scorpmod.tileentity.TileWasher;

import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkRegistry;
import cpw.mods.fml.common.registry.GameRegistry;

@Mod(modid = Reference.MOD_ID, name = Reference.MOD_NAME, version = Reference.MOD_VERSION)
public class ScorpMod
{
	@Instance(Reference.MOD_ID)
	public static ScorpMod instance;
	private GuiHandler guiHandler = new GuiHandler();
	public static Block scorpBlock;
	public static Block blockcommanderAdz;
	public static Block blockelipsicalLamp;
	public static Block blockcontainedSunspot;
	public static Block blockhandScanner;
	public static Block blockliquidMixer;
	public static Block blockliquidWasher;
	public static Block blockliquidBottler;
	public static Block blockmeatPurifier;
	public static Block blockwhiteFluid;
	public static Block blockgreenFluid;
	public static Block blockpurpleFluid;
	public static Block blockredFluid;
	public static Block blockturquoiseFluid;
	public static Block blockyellowFluid;
	public static Item itemfluidFilter;
	public static Item itempurpleDust;
	public static Item itemmonsterNugget;
	public static Item itemmonsterMeat;
	public static Item itemGrinder;
	public static Item itemgreenBottle;
	public static Item itempurpleBottle;
	public static Item itemredBottle;
	public static Item itemturquoiseBottle;
	public static Item itemwhiteBottle;
	public static Item itemyellowBottle;
	public static Item itemgreendirtyBottle;
	public static Item itempurpledirtyBottle;
	public static Item itemreddirtyBottle;
	public static Item itemturquoisedirtyBottle;
	public static Item itemwhitedirtyBottle;
	public static Item itemyellowdirtyBottle;
	public static Item itememptyBottle;
	public static Item itemgreenBucket;
	public static Item itempurpleBucket;
	public static Item itemredBucket;
	public static Item itemturquoiseBucket;
	public static Item itemwhiteBucket;
	public static Item itemyellowBucket;
	public static Fluid fluidWhite;
	public static Fluid fluidGreen;
	public static Fluid fluidPurple;
	public static Fluid fluidRed;
	public static Fluid fluidTurquoise;
	public static Fluid fluidYellow;
	
	public static CreativeTabs tabscorpItems = new CreativeTabs("tabscorpItems")
	{
		@Override
		public Item getTabIconItem()
		{
			return ScorpMod.itemyellowBottle;
		}
	};

	@EventHandler
	public void preinit(FMLPreInitializationEvent event)
	{
		ModMetadata data = event.getModMetadata();
		
		data.name = Reference.MOD_NAME;
		data.version = Reference.MOD_VERSION;
		data.authorList = Arrays.asList(new String[] { "Scorp" });
		data.description = Reference.MOD_DESCRIPTION;
		data.autogenerated = false;
		
		scorpBlock = new BlockScorp();
		blockcommanderAdz = new BlockCommanderAdz();
		blockelipsicalLamp = new BlockElipsicalLamp();
		blockcontainedSunspot = new BlockContainedSunspot();
		blockhandScanner = new BlockHandScanner();
		blockliquidMixer = new BlockContainerBaseScorpMod<TileMixer>("liquidmixer", Material.iron, TileMixer.class, 0);
		blockliquidBottler = new BlockContainerBaseScorpMod<TileBottler>("bottler", Material.iron, TileBottler.class, 1);
		blockliquidWasher = new BlockContainerBaseScorpMod<TileWasher>("washer", Material.iron, TileWasher.class, 2);
		blockmeatPurifier = new BlockContainerBaseScorpMod<TileMeatPurifier>("meatpurifier", Material.iron, TileMeatPurifier.class, 3);
		
		itemfluidFilter = new ItemBaseScorpMod("filter", 1, true, 10);
		itempurpleDust = new ItemBaseScorpMod("purpledust");
		itemmonsterNugget = new ItemBaseScorpMod("monsternugget");
		itemmonsterMeat = new ItemMonsterMeat();
		itemGrinder = new ItemBaseScorpMod("grinder", 1, true, 30);
		
		ItemDrink drink = new ItemDrink();
		itemgreenBottle = new ItemDrink("greenbottle", drink.new potionType(Potion.heal.id, 1, 2), drink.new potionType(Potion.resistance.id, 3600, 2), drink.new potionType(Potion.regeneration.id, 3600, 2), drink.new potionType(Potion.field_76443_y.id, 200, 2));
		itempurpleBottle = new ItemDrink("purplebottle", drink.new potionType(Potion.moveSpeed.id, 1200, 1), drink.new potionType(Potion.jump.id, 1200, 1), drink.new potionType(Potion.damageBoost.id, 1200, 1));
		itemredBottle = new ItemDrink("redbottle", drink.new potionType(Potion.nightVision.id, 3600, 1));
		itemturquoiseBottle = new ItemDrink("turquoisebottle", drink.new potionType(Potion.digSpeed.id, 6000, 1), drink.new potionType(Potion.nightVision.id, 6000, 1));
		itemwhiteBottle = new ItemDrink("whitebottle", drink.new potionType(Potion.moveSpeed.id, 1200, 2));
		itemyellowBottle = new ItemDrink("yellowbottle", drink.new potionType(Potion.heal.id, 20, 5), drink.new potionType(Potion.field_76443_y.id, 20, 5));
		itemgreendirtyBottle = new ItemDrinkDirty("greendirtybottle");
		itempurpledirtyBottle = new ItemDrinkDirty("purpledirtybottle");
		itemreddirtyBottle = new ItemDrinkDirty("reddirtybottle");
		itemturquoisedirtyBottle = new ItemDrinkDirty("turquoisedirtybottle");
		itemwhitedirtyBottle = new ItemDrinkDirty("whitedirtybottle");
		itemyellowdirtyBottle = new ItemDrinkDirty("yellowdirtybottle");
		itememptyBottle = new ItemBaseScorpMod("emptybottle");
		
		registerBlock(scorpBlock, "Scorp Block");
		registerBlock(blockcommanderAdz, "CommanderAdz Block");
		registerBlock(blockelipsicalLamp, "Elipsical Lamp");
		registerBlock(blockcontainedSunspot, "Contained Sunspot");
		registerBlock(blockhandScanner, "Hand Scanner");
		registerBlock(blockliquidMixer, "Mixer");
		registerBlock(blockliquidBottler, "Bottler");
		registerBlock(blockliquidWasher, "Washer");
		registerBlock(blockmeatPurifier, "MeatPurifier");
		
		registerItem(itemfluidFilter, "Filter");
		registerItem(itempurpleDust, "Purple Dust");
		registerItem(itemmonsterNugget, "Monster Nugget");
		registerItem(itemmonsterMeat, "Monster Meat");
		registerItem(itemGrinder, "Grinder");
		registerItem(itemgreenBottle, "Green Bottle");
		registerItem(itempurpleBottle, "Purple Bottle");
		registerItem(itemredBottle, "Red Bottle");
		registerItem(itemturquoiseBottle, "Turquoise Bottle");
		registerItem(itemwhiteBottle, "White Bottle");
		registerItem(itemyellowBottle, "Yellow Bottle");
		registerItem(itemgreendirtyBottle, "Dirty Green Bottle");
		registerItem(itempurpledirtyBottle, "Dirty Purple Bottle");
		registerItem(itemreddirtyBottle, "Dirty Red Bottle");
		registerItem(itemturquoisedirtyBottle, "Dirty Turquoise Bottle");
		registerItem(itemwhitedirtyBottle, "Dirty White Bottle");
		registerItem(itemyellowdirtyBottle, "Dirty Yellow Bottle");
		registerItem(itememptyBottle, "Empty Bottle");
		
		fluidWhite = new Fluid("white");
		fluidGreen = new Fluid("green");
		fluidPurple = new Fluid("purple");
		fluidRed = new Fluid("red");
		fluidTurquoise = new Fluid("turquoise");
		fluidYellow = new Fluid("yellow");
		
		FluidRegistry.registerFluid(fluidWhite);
		FluidRegistry.registerFluid(fluidGreen);
		FluidRegistry.registerFluid(fluidPurple);
		FluidRegistry.registerFluid(fluidRed);
		FluidRegistry.registerFluid(fluidTurquoise);
		FluidRegistry.registerFluid(fluidYellow);
		
		blockwhiteFluid = new BlockFluid(fluidWhite, Material.water).setBlockName("fluidwhite").setBlockTextureName("scorpmod:fluidwhite");
		blockgreenFluid = new BlockFluid(fluidGreen, Material.water).setBlockName("fluidgreen").setBlockTextureName("scorpmod:fluidgreen");
		blockpurpleFluid = new BlockFluid(fluidPurple, Material.water).setBlockName("fluidpurple").setBlockTextureName("scorpmod:fluidpurple");
		blockredFluid = new BlockFluid(fluidRed, Material.water).setBlockName("fluidred").setBlockTextureName("scorpmod:fluidred");
		blockturquoiseFluid = new BlockFluid(fluidTurquoise, Material.water).setBlockName("fluidturquoise").setBlockTextureName("scorpmod:fluidturquoise");
		blockyellowFluid = new BlockFluid(fluidYellow, Material.water).setBlockName("fluidyellow").setBlockTextureName("scorpmod:fluidyellow");
		
		registerBlock(blockwhiteFluid, "whitefluidblock");
		registerBlock(blockgreenFluid, "greenfluidblock");
		registerBlock(blockpurpleFluid, "purplefluidblock");
		registerBlock(blockredFluid, "redfluidblock");
		registerBlock(blockturquoiseFluid, "turquoisefluidblock");
		registerBlock(blockyellowFluid, "yellowfluidblock");
		
		itemgreenBucket = new ItemBucketScorpMod(blockgreenFluid, "greenbucket");
		itempurpleBucket = new ItemBucketScorpMod(blockpurpleFluid, "purplebucket");
		itemredBucket = new ItemBucketScorpMod(blockredFluid, "redbucket");
		itemturquoiseBucket = new ItemBucketScorpMod(blockturquoiseFluid, "turquoisebucket");
		itemwhiteBucket = new ItemBucketScorpMod(blockwhiteFluid, "whitebucket");
		itemyellowBucket = new ItemBucketScorpMod(blockyellowFluid, "yellowbucket");
		
		registerItem(itemgreenBucket, "Green Bucket");
		registerItem(itempurpleBucket, "Purple Bucket");
		registerItem(itemredBucket, "Red Bucket");
		registerItem(itemturquoiseBucket, "Turquoise Bucket");
		registerItem(itemwhiteBucket, "White Bucket");
		registerItem(itemyellowBucket, "Yellow Bucket");
		
		BucketHandler.INSTANCE.buckets.put(blockwhiteFluid, itemwhiteBucket);
		BucketHandler.INSTANCE.buckets.put(blockgreenFluid, itemgreenBucket);
		BucketHandler.INSTANCE.buckets.put(blockpurpleFluid, itempurpleBucket);
		BucketHandler.INSTANCE.buckets.put(blockredFluid, itemredBucket);
		BucketHandler.INSTANCE.buckets.put(blockturquoiseFluid, itemturquoiseBucket);
		BucketHandler.INSTANCE.buckets.put(blockyellowFluid, itemyellowBucket);
		
		MinecraftForge.EVENT_BUS.register(BucketHandler.INSTANCE);
	}

	@EventHandler
	public void init(FMLInitializationEvent event)
	{
		// TileEntity Registry
		GameRegistry.registerTileEntity(HandScannerTile.class, "HandScannerTile");
		GameRegistry.registerTileEntity(TileMixer.class, "MixerTile");
		GameRegistry.registerTileEntity(TileMixer.class, "BottlerTile");
		GameRegistry.registerTileEntity(TileWasher.class, "WasherTile");
		GameRegistry.registerTileEntity(TileMeatPurifier.class, "MeatPurifierTile");
		
		FluidContainerRegistry.registerFluidContainer(FluidRegistry.getFluidStack("white", FluidContainerRegistry.BUCKET_VOLUME), new ItemStack(ScorpMod.itemwhiteBucket), new ItemStack(Items.bucket));
		FluidContainerRegistry.registerFluidContainer(FluidRegistry.getFluidStack("green", FluidContainerRegistry.BUCKET_VOLUME), new ItemStack(ScorpMod.itemgreenBucket), new ItemStack(Items.bucket));
		FluidContainerRegistry.registerFluidContainer(FluidRegistry.getFluidStack("purple", FluidContainerRegistry.BUCKET_VOLUME), new ItemStack(ScorpMod.itempurpleBucket), new ItemStack(Items.bucket));
		FluidContainerRegistry.registerFluidContainer(FluidRegistry.getFluidStack("red", FluidContainerRegistry.BUCKET_VOLUME), new ItemStack(ScorpMod.itemredBucket), new ItemStack(Items.bucket));
		FluidContainerRegistry.registerFluidContainer(FluidRegistry.getFluidStack("turquoise", FluidContainerRegistry.BUCKET_VOLUME), new ItemStack(ScorpMod.itemturquoiseBucket), new ItemStack(Items.bucket));
		FluidContainerRegistry.registerFluidContainer(FluidRegistry.getFluidStack("yellow", FluidContainerRegistry.BUCKET_VOLUME), new ItemStack(ScorpMod.itemyellowBucket), new ItemStack(Items.bucket));
		
		networkRegisters();
		
		GameRegistry.addRecipe(new ItemStack(ScorpMod.itemfluidFilter), new Object[] { "sss", "sgs", "sss", 's', Items.stick, 'g', Blocks.glass_pane, });
		GameRegistry.addRecipe(new ItemStack(ScorpMod.itememptyBottle), new Object[] { " c ", "g g", " g ", 'c', Items.clay_ball, 'g', Blocks.glass_pane, });
		GameRegistry.addRecipe(new ItemStack(ScorpMod.blockhandScanner), new Object[] { "cic", "iri", "cic", 'c', Items.clay_ball, 'i', Items.iron_ingot, 'r', Items.redstone, });
		GameRegistry.addRecipe(new ItemStack(ScorpMod.blockliquidBottler), new Object[] { "ibi", "iBi", "ici", 'i', Items.iron_ingot, 'b', ScorpMod.itememptyBottle, 'B', Items.bucket, 'c', Items.clay_ball, });
		GameRegistry.addRecipe(new ItemStack(ScorpMod.blockliquidMixer), new Object[] { "iBi", "iri", "ici", 'i', Items.iron_ingot, 'B', Items.bucket, 'r', Items.redstone, 'c', Items.clay_ball, });
		GameRegistry.addRecipe(new ItemStack(ScorpMod.blockliquidWasher), new Object[] { "ifi", "iri", "ici", 'i', Items.iron_ingot, 'r', Items.redstone, 'f', ScorpMod.itemfluidFilter, 'c', Items.clay_ball, });
		GameRegistry.addRecipe(new ItemStack(ScorpMod.itemmonsterMeat), new Object[] { "nnn", "nnn", "nnn", 'n', ScorpMod.itemmonsterNugget, });
		
		ItemStack dyeStack = new ItemStack(Items.dye, 1, 5);
		
		GameRegistry.addShapelessRecipe(new ItemStack(ScorpMod.itempurpleDust, 1), dyeStack, Items.sugar);
	}

	public static void registerBlock(Block block, String name)
	{
		GameRegistry.registerBlock(block, name);
	}

	public static void registerItem(Item item, String name)
	{
		GameRegistry.registerItem(item, name);
	}

	public void networkRegisters()
	{
		NetworkRegistry.INSTANCE.registerGuiHandler(instance, guiHandler);
	}
}